/*
Autor: Camilo Lavado
Fecha 05-02-2022*/
----- Inicio de comentarios -----------------------

Requerimientos
-----1. Identificar cada una de las entidades relacionadas y en base a estas, crear el modelo
entidad relación correspondiente con todo lo que ello conlleva: cardinalidades, tipos
de datos de las variables, asignación de claves, entre otros. ( 2 Puntos ).-----

*.- Revisar archivo requerimiento1.png y el archivo de starUML requerimiento1.mdj


-----2. Llevar el modelo anteriormente realizado a base de datos, crear las tablas y la
estructura necesaria, la cual permitirá dar solución al problema planteado, debe crear
un usuario propio para poder desarrollar los script así como también las secuencias
que corresponda. ( 2 Puntos )-----
*.-
SQL*Plus: Release 19.0.0.0.0 - Production on MiÚ Feb 9 23:15:22 2022
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


Introduzca el nombre de usuario: system
Introduzca la contrase±a:
Hora de ┌ltima Conexi¾n Correcta: MiÚ Feb 02 2022 19:09:40 -03:00

Conectado a:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> alter session set "_ORACLE_SCRIPT"=true;

Sesi¾n modificada.
-----------------Crearemos el usuario "vendetodo" y le damos privilegios, para los requerimientos de la prueba-------------

SQL> create user vendetodo identified by 1234;

Usuario creado.

SQL> grant all privileges to vendetodo;

Concesi¾n terminada correctamente.

SQL>*AQUÍ CREAMOS LA CONEXIÓN A TRAVES DE SQL DEVELOPER, LLAMADA "vendetodoSPA"  CREANDO UNA NUEVA BASE DE DATOS, DONDE AÑADIREMOS LAS TABLAS.*

-------------------Se añaden las tablas mediante DDL
--Creamos la tabla empleados
CREATE TABLE empleados (
    id_empleado numeric(10) NOT NULL,
    nombre varchar(15) NOT NULL,
    apellido varchar(15) NOT NULL,
    fecha_nacimiento date NOT NULL,
    direccion varchar(50) NOT NULL,
    region varchar(50) NOT NULL,
    ciudad varchar(50) NOT NULL,
    pais varchar(20) NOT NULL,
    telefono numeric(30) NOT NULL,
    cargo varchar(50) NOT NULL,
    PRIMARY KEY (id_empleado)
);

--Creamos la tabla clientes
CREATE TABLE clientes (
    id_cliente numeric(10) NOT NULL,
    nombre_empresa varchar(50) NOT NULL,
    nombre_contacto varchar(50) NOT NULL,
    email varchar(30) NOT NULL,
    direccion varchar(30) NOT NULL,
    region varchar(25) NOT NULL,
    ciudad varchar(30) NOT NULL,
    pais varchar(30) NOT NULL,
    codigo_postal numeric(30) NOT NULL,
    telefono numeric(30) NOT NULL,
    PRIMARY KEY (id_cliente)
);

--Creamos la tabla despachadores
CREATE TABLE despachadores (
    id_despachador numeric NOT NULL,
    nombre varchar(40) NOT NULL,
    telefono_empresa numeric(30) NOT NULL,
    PRIMARY KEY (id_despachador)
);

--Creamos la tabla categoria
CREATE TABLE categoria (
    id_categoria numeric NOT NULL,
    nombre_categoria varchar(50) NOT NULL,
    PRIMARY KEY (id_categoria)
);

--Creamos la tabla proveedores
CREATE TABLE proveedores (
    id_proveedor numeric(30) NOT NULL,
    nombre_compania varchar(50) NOT NULL,
    nombre_contacto varchar(50) NOT NULL,
    direccion varchar(50) NOT NULL,
    region varchar(50) NOT NULL,
    ciudad varchar(50) NOT NULL,
    telefono numeric(30) NOT NULL,
    PRIMARY KEY (id_proveedor)
);

--Creamos la tabla productos
CREATE TABLE productos (
    id_producto numeric(30) NOT NULL,
    precio integer NOT NULL,
    stock numeric(30) NOT NULL,
    descontinuado varchar(15) NOT NULL,
    id_categoria numeric(30) NOT NULL,
    id_proveedor numeric(30) NOT NULL,
    PRIMARY KEY (id_producto)
);
--Creamos la tabla compras
CREATE TABLE compras (
    id_compra numeric(30) NOT NULL,
    valor_compra integer NOT NULL,
    cantidad_productos numeric(30) NOT NULL,
    descuentos integer NOT NULL,
    PRIMARY KEY (id_compra)
);

--Creamos la tabla orden de compras
CREATE TABLE orden_de_compra (
    cantidad numeric(30) NOT NULL,
    id_producto numeric(30) NOT NULL,
    id_orden numeric(30) NOT NULL
);

--Creamos la tabla ordenes
CREATE TABLE ordenes (
    id_orden numeric(30) NOT NULL,
    fecha_requerimiento date NOT NULL,
    fecha_envio date NOT NULL,
    nombre_receptor varchar(30) NOT NULL,
    direccion varchar(50) NOT NULL,
    codigo_postal numeric(30) NOT NULL,
    ciudad varchar(30) NOT NULL,
    region varchar(30) NOT NULL,
    pais varchar(30) NOT NULL,
    metodo_envio varchar(30) NOT NULL,
    id_compra numeric(30) NOT NULL,
    id_empleado numeric(30) NOT NULL,
    id_cliente numeric(30) NOT NULL,
    id_despachador numeric(30) NOT NULL,
    PRIMARY KEY (id_orden)
);
--alteramos las tablas para añadir las llaves foraneas de forma mas ordenada.
ALTER TABLE productos ADD CONSTRAINT FK_productos__id_categoria FOREIGN KEY (id_categoria) REFERENCES categoria(id_categoria);
ALTER TABLE productos ADD CONSTRAINT FK_productos__id_proveedor FOREIGN KEY (id_proveedor) REFERENCES proveedores(id_proveedor);
ALTER TABLE orden_de_compra ADD CONSTRAINT FK_orden_de_compra__id_producto FOREIGN KEY (id_producto) REFERENCES productos(id_producto);
ALTER TABLE ordenes ADD CONSTRAINT FK_ordenes__id_compra FOREIGN KEY (id_compra) REFERENCES compras(id_compra);
ALTER TABLE ordenes ADD CONSTRAINT FK_ordenes__id_empleado FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado);
ALTER TABLE ordenes ADD CONSTRAINT FK_ordenes__id_despachador FOREIGN KEY (id_despachador) REFERENCES despachadores(id_despachador);


-----------------Arroja por consola lo siguiente--------------------

Table EMPLEADOS creado.
Table CLIENTES creado.
Table DESPACHADORES creado.
Table CATEGORIA creado.
Table PROVEEDORES creado.
Table PRODUCTOS creado.
Table COMPRAS creado.
Table ORDEN_DE_COMPRA creado.
Table ORDENES creado.

Table PRODUCTOS alterado.
Table PRODUCTOS alterado.
Table ORDEN_DE_COMPRA alterado.
Table ORDENES alterado.
Table ORDENES alterado.
Table ORDENES alterado.

-----3. Realizar 5 inserciones a cada tabla, esto con el fin de ejecutar consultas sobre el
modelo. ( 2 Puntos )-----
*.-
savepoint clientes;
--Clientes
--1
INSERT INTO CLIENTES (id_cliente, nombre_empresa, nombre_contacto, email, direccion, region, ciudad, pais, codigo_postal, telefono)
VALUES(1, 'Distribuidora viste como roca', 'Dwayne Jhonson', 'therock@wwe.com', 'hollywood boulevard 14589', 'no aplica', 'California', 'Estados Unidos', 8964561, 7987897445613);
COMMIT;
--2
INSERT INTO CLIENTES (id_cliente, nombre_empresa, nombre_contacto, email, direccion, region, ciudad, pais, codigo_postal, telefono)
VALUES(2, 'calzado de rugby don Aaron', 'Aaron Smith', 'asmith@irb.com', 'evergreen avenue 063', 'no aplica', 'Sidney', 'Australia', 7777894, 14523675445);
COMMIT;
--3
INSERT INTO CLIENTES (id_cliente, nombre_empresa, nombre_contacto, email, direccion, region, ciudad, pais, codigo_postal, telefono)
VALUES(3, 'alimentos congelados lobo blanco', 'Geralt Rivia', 'whitewolf@kahermorhen.com', 'novigrado bajo 1014', 'region de la araucania', 'pucon', 'chile', 99978746, 997845623);
COMMIT;
--4
INSERT INTO CLIENTES (id_cliente, nombre_empresa, nombre_contacto, email, direccion, region, ciudad, pais, codigo_postal, telefono)
VALUES(4, 'dulcinea technologies', 'miguel cervantes', 'elquijote@santillana.com', 'el molino 5013', 'region de la araucania', 'villarrica', 'chile', 9997863, 632165498);
COMMIT;
--5
INSERT INTO CLIENTES (id_cliente, nombre_empresa, nombre_contacto, email, direccion, region, ciudad, pais, codigo_postal, telefono)
VALUES(5, 'jewels by meaning', 'Jordan Peterson', 'JBP@Petersoncompany.com', 'calle proposito 4567', 'region de la araucania', 'temuco', 'chile', 999441, 789456123);
COMMIT;

savepoint despachadores;
--Despachadores
--1
INSERT INTO DESPACHADORES (id_despachador, nombre, telefono_empresa)
VALUES(1, 'pedro paramo', '99997541' );
COMMIT;
--2
INSERT INTO DESPACHADORES (id_despachador, nombre, telefono_empresa)
VALUES(2, 'luis andaur', '987456111' );
COMMIT;
--3
INSERT INTO DESPACHADORES (id_despachador, nombre, telefono_empresa)
VALUES(3, 'sergio busquets', '88846213' );
COMMIT;
--4
INSERT INTO DESPACHADORES (id_despachador, nombre, telefono_empresa)
VALUES(4, 'claudio bravo', '654778912' );
COMMIT;
--5
INSERT INTO DESPACHADORES (id_despachador, nombre, telefono_empresa)
VALUES(5, 'Marko Zaror', '7898745612' );
COMMIT;

savepoint categoria;
--categoria
--1
INSERT INTO CATEGORIA (id_categoria, nombre_categoria)
VALUES(1, 'vestuario');
COMMIT;
--2
INSERT INTO CATEGORIA (id_categoria, nombre_categoria)
VALUES(2, 'calzado');
COMMIT;
--3
INSERT INTO CATEGORIA (id_categoria, nombre_categoria)
VALUES(3, 'alimentos');
COMMIT;
--4
INSERT INTO CATEGORIA (id_categoria, nombre_categoria)
VALUES(4, 'tecnologia');
COMMIT;
--5
INSERT INTO CATEGORIA (id_categoria, nombre_categoria)
VALUES(5, 'joyas');
COMMIT;

savepoint proveedores;
--proveedores
--1
INSERT INTO PROVEEDORES (id_proveedor, nombre_compania, nombre_contacto, direccion, region, ciudad, telefono)
VALUES(1, 'zara', 'sarita gonzales', 'calle falsa 123', 'metropolitana', 'santiago', 789945551);
COMMIT;
--2
INSERT INTO PROVEEDORES (id_proveedor, nombre_compania, nombre_contacto, direccion, region, ciudad, telefono)
VALUES(2, 'jordan', 'michael jordan', 'patronato 9674', 'metropolitana', 'santiago', 789945562);
COMMIT;
--3
INSERT INTO PROVEEDORES (id_proveedor, nombre_compania, nombre_contacto, direccion, region, ciudad, telefono)
VALUES(3, 'La crianza', 'Mauricio Kloker', 'laguna sur 1256', 'metropolitana', 'santiago', 654748231);
COMMIT;
--4
INSERT INTO PROVEEDORES (id_proveedor, nombre_compania, nombre_contacto, direccion, region, ciudad, telefono)
VALUES(4, 'huawei', 'Donnie Yen', 'diego de almagro 0682', 'metropolitana', 'santiago', 78948789);
COMMIT;
--5
INSERT INTO PROVEEDORES (id_proveedor, nombre_compania, nombre_contacto, direccion, region, ciudad, telefono)
VALUES(5, 'joyas baron', 'andronico mujica', 'villa el esfuerzo 2360', 'metropolitana', 'santiago', 789946589);
COMMIT;

savepoint productos;
--productos
--1
INSERT INTO PRODUCTOS (id_producto, precio, stock, descontinuado, id_categoria, id_proveedor)
VALUES (1, 10000, 5, 'no', 1, 1);
COMMIT;
--2
INSERT INTO PRODUCTOS (id_producto, precio, stock, descontinuado, id_categoria, id_proveedor)
VALUES (2, 36000, 45, 'no', 2, 2);
COMMIT;
--3
INSERT INTO PRODUCTOS (id_producto, precio, stock, descontinuado, id_categoria, id_proveedor)
VALUES (3, 2000, 100, 'si', 3, 3);
COMMIT;
--4
INSERT INTO PRODUCTOS (id_producto, precio, stock, descontinuado, id_categoria, id_proveedor)
VALUES (4, 450000, 200, 'no', 4, 4);
COMMIT;
--5
INSERT INTO PRODUCTOS (id_producto, precio, stock, descontinuado, id_categoria, id_proveedor)
VALUES (5, 600000, 10, 'no', 5, 5);
COMMIT;

savepoint compras;
--compras
--1
INSERT INTO compras (id_compra, valor_compra,  cantidad_productos, descuentos)
VALUES(1, 1200000, 2,0);
COMMIT;

--2
INSERT INTO compras (id_compra, valor_compra,  cantidad_productos, descuentos)
VALUES(2, 450000, 1,0);
COMMIT;
--3
INSERT INTO compras (id_compra, valor_compra,  cantidad_productos, descuentos)
VALUES(3, 2000, 1,0);
COMMIT;
--4
INSERT INTO compras (id_compra, valor_compra,  cantidad_productos, descuentos)
VALUES(4, 432000, 12,0);
COMMIT;
--5
INSERT INTO compras (id_compra, valor_compra,  cantidad_productos, descuentos)
VALUES(5, 10000, 5,0);
COMMIT;

savepoint ordenes_de_compra;
--ordenes de compra
--1
INSERT INTO orden_de_compra (cantidad, id_producto, id_orden)
VALUES(2, 5, 1);
UPDATE PRODUCTOS
SET stock = stock-2
WHERE id_producto = 5;
--2
INSERT INTO orden_de_compra (cantidad, id_producto, id_orden)
VALUES(1, 4, 2);
UPDATE PRODUCTOS
SET stock = stock-1
WHERE id_producto = 4;
--3
INSERT INTO orden_de_compra (cantidad, id_producto, id_orden)
VALUES(1, 3, 3);
UPDATE PRODUCTOS
SET stock = stock-1
WHERE id_producto = 3;
--4
INSERT INTO orden_de_compra (cantidad, id_producto, id_orden)
VALUES(12, 2, 4);
UPDATE PRODUCTOS
SET stock = stock-12
WHERE id_producto = 2;
--5
INSERT INTO orden_de_compra (cantidad, id_producto, id_orden)
VALUES(5, 3, 5);
UPDATE PRODUCTOS
SET stock = stock-5
WHERE id_producto = 3;
COMMIT;

SAVEPOINT ordenes;
--ordenes de compra
--1
INSERT INTO ORDENES (id_orden, fecha_requerimiento, fecha_envio, nombre_receptor, direccion, codigo_postal, region, ciudad, pais, metodo_envio, id_compra, id_empleado, id_cliente, id_despachador)
VALUES(1, TO_DATE('2020-10-14', 'YYYY-MM-DD') , TO_DATE('2020-11-24', 'YYYY-MM-DD'), 'mario bros', 'calle champinon', 12345, 'metropolitana', 'santiago', 'chile', 'carreta', 1, 1, 1, 1);
COMMIT;
--2
INSERT INTO ORDENES (id_orden, fecha_requerimiento, fecha_envio, nombre_receptor, direccion, codigo_postal, region, ciudad, pais, metodo_envio, id_compra, id_empleado, id_cliente, id_despachador)
VALUES(2, TO_DATE('2020-08-17', 'YYYY-MM-DD') , TO_DATE('2020-11-20', 'YYYY-MM-DD'), 'Samus Aran', 'las palmeras', 1282, 'metropolitana', 'santiago', 'chile', 'camion', 2, 2, 2, 2);
COMMIT;
--3
INSERT INTO ORDENES (id_orden, fecha_requerimiento, fecha_envio, nombre_receptor, direccion, codigo_postal, region, ciudad, pais, metodo_envio, id_compra, id_empleado, id_cliente, id_despachador)
VALUES(3, TO_DATE('2020-12-20', 'YYYY-MM-DD') , TO_DATE('2021-01-20', 'YYYY-MM-DD'), 'Peter Griffin', 'las naranjas', 0654, 'La araucania', 'temuco', 'chile', 'avion', 3, 3, 3, 3);
COMMIT;
--4
INSERT INTO ORDENES (id_orden, fecha_requerimiento, fecha_envio, nombre_receptor, direccion, codigo_postal, region, ciudad, pais, metodo_envio, id_compra, id_empleado, id_cliente, id_despachador)
VALUES(4, TO_DATE('2020-12-21', 'YYYY-MM-DD') , TO_DATE('2021-01-21', 'YYYY-MM-DD'), 'Harry Potter', 'pasaje 9 3/4', 66548, 'hogwarts', 'mundomagico', 'chile', 'lechuza', 4, 4, 4, 4);
COMMIT;
--5
INSERT INTO ORDENES (id_orden, fecha_requerimiento, fecha_envio, nombre_receptor, direccion, codigo_postal, region, ciudad, pais, metodo_envio, id_compra, id_empleado, id_cliente, id_despachador)
VALUES(5, TO_DATE('2021-01-14', 'YYYY-MM-DD') , TO_DATE('2021-01-20', 'YYYY-MM-DD'), 'luis jara', 'las acacias', 0657, 'metropolitana', 'santiago', 'chile', 'camion', 5, 5, 5, 5);
COMMIT;



--mostramos por pantalla
SELECT * FROM empleados ;
SELECT * FROM clientes;
SELECT * FROM despachadores ;
SELECT * FROM categoria  ;
SELECT * FROM proveedores  ;
SELECT * FROM productos ;
SELECT * FROM compras ;
SELECT * FROM orden_de_compra;
SELECT * FROM ordenes ;

--Se añadira la respuesta por pantalla en una carpeta aparte llamada "resultados de consultas"


-----4. Formular y ejecutar las consultas que correspondan, para obtener la siguiente
información:-----

-----a. Determinar cuál o cuáles son los clientes con las compras más altas y a qué
ciudad corresponden los mismos. Esto permitirá en un futuro que VendeTodo
SPA pueda buscar convenios con algunas empresas despachadoras. (2
Puntos )-----
*.-
--Realizamos un select que nos muestre el nombre de la empresa y la ciudad a la cual pertecen los clientes con compras mas altas
 y realizaremos un inner join en la tabla ordenes, seguido de un order para ordenar a los clientes segun el valor de las cosas que hayan comprado de forma descendente.

savepoint consulta1
SELECT cl.nombre_empresa, cl.ciudad 
FROM CLIENTES cl
    INNER JOIN ORDENES ord
        ON cl.id_cliente = ord.id_cliente
WHERE (id_compra) IN
        (
        SELECT id_compra
        FROM (
             SELECT id_compra, Rank() 
             OVER(ORDER BY valor_compra DESC) AS rango
            FROM COMPRAS
             ) 
        WHERE rango < 4
        );
-----------------Arroja por consola lo siguiente--------------------
Savepoint creado.


ID_CLIENTE NOMBRE_EMPRESA                                     CIUDAD                        
---------- -------------------------------------------------- ------------------------------
         1 Distribuidora viste como roca                      California                    
         2 calzado de rugby don Aaron                         Sidney                        
         4 dulcinea technologies                              villarrica                    

Confirmación terminada.



-----b. Se necesita saber los nombre de los distribuidores de los productos más
vendidos, esto permitirá evaluar comprar por volumen. Solo es necesario que
se listen los nombres de todos los registros que cumplan con la solicitud
( 2 Puntos )-----
*.-